<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="TravelBoard">
	<!-- country -->
	<resultMap type="Country" id="travelCountryResultSet">
		<id property="countryId" column="COUNTRY_ID"/>
		<result property="continentName" column="CONTINENT_NAME"/>
		<result property="countryNameKo" column="COUNTRY_NAME_KO"/>
		<result property="countryNameEn" column="COUNTRY_NAME_EN"/>
		<result property="currencyUnit" column="CURRENCY_UNIT"/>
	</resultMap>
	
	<!-- trvCities -->
	<resultMap type="trvCity" id="travelCityResultSet">
		<id property="cityId" column="CITY_ID"/>
		<result property="cityNameKo" column="CITY_NAME_KO"/>
		<result property="countryNameKo" column="COUNTRY_NAME_KO"/>
		<result property="countryNameEn" column="COUNTRY_NAME_EN" />
	</resultMap>
	
	<!-- city -->
	<resultMap type="city" id="cityResultSet">
		<id property="cityId" column="CITY_ID"/>
		<result property="trvId" column="TRV_ID"/>
		<result property="cityNameKo" column="CITY_NAME_KO"/>
		<result property="cityNameEn" column="CITY_NAME_EN"/>
		<result property="countryId" column="COUNTRY_ID"/>
		<result property="countryNameKo" column="COUNTRY_NAME_KO"/>
		<result property="countryNameEn" column="COUNTRY_NAME_EN"/>
		<result property="currencyUnit" column="CURRENCY_UNIT"/>
	</resultMap>
		
	<!-- trvTags -->
	<resultMap type="Tag" id="travelTagResultSet">
		<id property="tagId" column="TAG_ID"/>
		<result property="tagName" column="TAG_NAME"/>
	</resultMap>
	
	<!-- schFile -->
	<resultMap type="SchFile" id="schFileResultSet">
		<id property="fileId" column="FILE_ID"/>
		<result property="originName" column="ORIGIN_NAME"/>
		<result property="changeName" column="CHANGE_NAME"/>
		<result property="filePath" column="FILE_PATH"/>
		<result property="uploadDate" column="UPLOAD_DATE"/>
		<result property="fileLevel" column="FILE_LEVEL"/>
		<result property="fileCaption" column="FILE_CAPTION"/>
		<result property="schId" column="SCH_ID"/>
		<result property="fileStatus" column="FILE_STATUS"/>
	</resultMap>
	
	<!-- likey -->
	<resultMap type="Likey" id="likeyResultSet">
		<id property="likeyId" column="LIKEY_ID"/>
		<result property="memberId" column="MEMBER_ID"/>
		<result property="enrollDate" column="ENROLL_DATE"/>
		<result property="likeyType" column="LIKEY_TYPE"/>
		<result property="spotId" column="SPOT_ID"/>
		<result property="trvId" column="TRV_ID"/>
	</resultMap>
	
	<!-- TravelBoard -->
	<resultMap type="TravelBoard" id="travelBoardResultSet">
		<id property="trvId" column="TRV_ID"/>
		<result property="trvTitle" column="TRV_TITLE"/>
		<result property="startDate" column="START_DATE"/>
		<result property="endDate" column="END_DATE"/>
		<result property="compNumber" column="COMP_NUMBER"/>
		<result property="openDate" column="OPEN_DATE"/>
		<result property="modifyDate" column="MODIFY_DATE"/>
		<result property="completeDate" column="COMPLETE_DATE"/>
		<result property="status" column="STATUS"/>
		<result property="memberId" column="MEMBER_ID"/>
		<result property="userName" column="USER_NAME"/>
		<result property="trvRef" column="TRV_REF"/>
		<result property="likeyCount" column="LIKEY_COUNT"/>
		<result property="buyCount" column="BUY_COUNT"/>
		<result property="buyStatus" column="BUY_STATUS"/>
		<result property="likeyStatus" column="LIKEY_STATUS"/>
		
		<collection property="trvCities" javaType="java.util.ArrayList" resultMap="travelCityResultSet"/>
		<collection property="trvTags" javaType="java.util.ArrayList" resultMap="travelTagResultSet"/>
		<collection property="schFiles" javaType="java.util.ArrayList" resultMap="schFileResultSet"/>
	</resultMap>
	
	<resultMap type="TrvBoardSch" id="trvScheduleResultSet">
		<id property="schId" column="SCH_ID" />
		<result property="schTitle" column="SCH_TITLE" />
		<result property="schNumber" column="SCH_NUMBER" />
		<result property="startTime" column="START_TIME" />
		<result property="endTime" column="END_TIME" />
		<result property="isTimeset" column="IS_TIMESET" />
		<result property="schContent" column="SCH_CONTENT" />
		<result property="schTransp" column="SCH_TRANSP" />
		<result property="plcId" column="PLC_ID" />
		<result property="plcName" column="PLC_NAME"/>
		<result property="dayId" column="DAY_ID" />
		<result property="likeyId" column="LIKEY_ID" />
		<result property="spotId" column="SPOT_ID" />
	</resultMap>
	
	<resultMap type="TrvDaySchedule" id="trvDayScheduleResultSet">
		<id property="dayId" column="DAY_ID"/>
		<result property="dayNumber" column="DAY_NUMBER"/>
		<result property="dayDate" column="DAY_DATE"/>
		<result property="dayMemo" column="DAY_MEMO"/>
		<result property="dayWeather" column="DAY_WEATHER"/>
		<result property="trvId" column="TRV_ID"/>
		<collection property="trvSchedule" javaType="java.util.ArrayList" resultMap="trvScheduleResultSet"/>
	</resultMap>
	
	<!-- TourReview -->
	<resultMap type="TourReview" id="tourReviewResultSet">
		<id property="reviewId" column="REVIEW_ID"/>
		<result property="riviewDate" column="REVIEW_DATE"/>
		<result property="reviewStatus" column="REVIEW_STATUS"/>
		<result property="grade" column="GRADE"/>
		<result property="memberId" column="MEMBER_ID"/>
		<result property="userName" column="USER_NAME"/>
		<result property="reviewContent" column="REVIEW_CONTENT"/>
		<result property="trvId" column="TRV_ID"/>
		<result property="writeStatus" column="WRITE_STAUTS"/>
	</resultMap>
	
	<!-- 여행일정 페이징용 -->
	<select id="getListCount" resultType="_int">
		SELECT COUNT(*)
		FROM TRAVEL T
		JOIN MEMBER M ON (T.MEMBER_ID = M.MEMBER_ID)
		WHERE STATUS = 'Y'
		AND TRV_REF IS NULL
		<choose>
			<when test="trvTitle != null"> AND T.TRV_TITLE LIKE '%' || #{ trvTitle } || '%' </when>
			<when test="userName != null"> AND M.USER_NAME LIKE '%' || #{ userName } || '%' </when>
		</choose>
	</select>
	
	<!-- 일정 구매리뷰 페이징용 -->
	<select id="getListCountReview" resultType="_int">
		SELECT COUNT(*)
		FROM TOUR_REVIEW
		WHERE TRV_ID = #{ trvId }
		AND REVIEW_STATUS = 'Y'
	</select>
	
	<!-- 여행일정 전체 조회용 -->
	<select id="selectTravelBoardList" resultMap="travelBoardResultSet">
		SELECT DISTINCT T.TRV_ID, T.TRV_TITLE, T.START_DATE, T.END_DATE, T.COMPLETE_DATE, T.STATUS, 
       		   M.USER_NAME, T.TRV_REF, TG.TAG_ID, TA.TAG_NAME, CITY_NAME_KO, COUNTRY_NAME_KO, CITY_ID, LIKEY_COUNT, BUY_COUNT,
               SFI.ORIGIN_NAME, SFI.CHANGE_NAME, SFI.FILE_PATH
	    FROM TRAVEL T
	    JOIN MEMBER M ON (M.MEMBER_ID = T.MEMBER_ID)
	    JOIN TRV_DAY TD ON (T.TRV_ID = TD.TRV_ID) AND TD.DAY_NUMBER = 1
	    LEFT JOIN TRV_SCH TS ON (TD.DAY_ID = TS.DAY_ID)
        LEFT JOIN SCH_FILE SFI ON (SFI.SCH_ID = TS.SCH_ID) AND SFI.FILE_LEVEL = 0 AND FILE_STATUS = 'Y'
	    LEFT JOIN TRV_TAG TG ON (T.TRV_ID = TG.TRV_ID)
	    LEFT JOIN TAG TA ON (TG.TAG_ID = TA.TAG_ID)
        LEFT JOIN (SELECT TCT.CITY_ID, CI.CITY_NAME_KO, COU.COUNTRY_NAME_KO, T.TRV_ID
                    FROM TRAVEL T
                    LEFT JOIN TRV_CITY TCT ON (TCT.TRV_ID = T.TRV_ID)
                            LEFT JOIN CITY CI ON (CI.CITY_ID = TCT.CITY_ID)
                            LEFT JOIN COUNTRY COU ON (COU.COUNTRY_ID = CI.COUNTRY_ID)) TC ON (T.TRV_ID = TC.TRV_ID)
        JOIN (SELECT T.TRV_ID, COUNT(L.LIKEY_ID) as LIKEY_COUNT
              FROM TRAVEL T
              LEFT JOIN LIKEY L ON (L.TRV_ID = T.TRV_ID)
              WHERE T.STATUS = 'Y'
              AND T.TRV_REF IS NULL
              GROUP BY T.TRV_ID) TRL ON (TRL.TRV_ID = T.TRV_ID)
        JOIN (SELECT T.TRV_ID, COUNT(U.USE_POINT) as BUY_COUNT
              FROM TRAVEL T
              LEFT JOIN USE_POINT U ON (U.TRV_ID = T.TRV_ID)
              WHERE T.STATUS = 'Y'
              AND T.TRV_REF IS NULL
              GROUP BY T.TRV_ID) US ON (US.TRV_ID = T.TRV_ID)
	    WHERE T.STATUS = 'Y'
	    AND T.TRV_REF IS NULL
	    <choose>
			<when test="trvTitle != null"> AND T.TRV_TITLE LIKE '%' || #{ trvTitle } || '%' </when>
			<when test="userName != null"> AND M.USER_NAME LIKE '%' || #{ userName } || '%' </when>
		</choose>
        
        <choose>
			<when test="completeDate != null"> ORDER BY T.COMPLETE_DATE DESC </when>
			<when test="likeyCount = -1"> ORDER BY LIKEY_COUNT DESC </when>
			<when test="buyCount = -1"> ORDER BY BUY_COUNT DESC </when>
			<otherwise>
				ORDER BY T.COMPLETE_DATE DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="selectTagList" resultMap="travelTagResultSet">
		SELECT *
		FROM TAG
	</select>
	
	<select id="selectCityList" resultMap="travelCountryResultSet">
		SELECT *
		FROM COUNTRY
	</select>
	
	<select id="selectTravelDetailForm" resultMap="travelBoardResultSet">
		SELECT DISTINCT T.TRV_ID, T.TRV_TITLE, T.START_DATE, T.END_DATE, T.COMPLETE_DATE, T.STATUS, 
       		   T.MEMBER_ID, M.USER_NAME, T.TRV_REF, TA.TAG_NAME, TG.TAG_ID, LIKEY_COUNT, BUY_COUNT,
       		   CITY_ID, CITY_NAME_KO, COUNTRY_NAME_KO, COUNTRY_NAME_EN
	    FROM TRAVEL T
	    JOIN MEMBER M ON (M.MEMBER_ID = T.MEMBER_ID)
	    JOIN TRV_DAY TD ON (T.TRV_ID = TD.TRV_ID)
	    LEFT JOIN TRV_SCH TS ON (TD.DAY_ID = TS.DAY_ID)
	    LEFT JOIN TRV_TAG TG ON (T.TRV_ID = TG.TRV_ID)
	    LEFT JOIN TAG TA ON (TG.TAG_ID = TA.TAG_ID)
        LEFT JOIN (SELECT TCT.CITY_ID, CI.CITY_NAME_KO, COU.COUNTRY_NAME_KO, COU.COUNTRY_NAME_EN, T.TRV_ID
                    FROM TRAVEL T
                    LEFT JOIN TRV_CITY TCT ON (TCT.TRV_ID = T.TRV_ID)
                            LEFT JOIN CITY CI ON (CI.CITY_ID = TCT.CITY_ID)
                            LEFT JOIN COUNTRY COU ON (COU.COUNTRY_ID = CI.COUNTRY_ID)) TC ON (T.TRV_ID = TC.TRV_ID)
        JOIN (SELECT T.TRV_ID, COUNT(L.LIKEY_ID) as LIKEY_COUNT
              FROM TRAVEL T
              LEFT JOIN LIKEY L ON (L.TRV_ID = T.TRV_ID)
              WHERE T.STATUS = 'Y'
              AND T.TRV_REF IS NULL
              GROUP BY T.TRV_ID) TRL ON (TRL.TRV_ID = T.TRV_ID)
        JOIN (SELECT T.TRV_ID, COUNT(U.USE_POINT) as BUY_COUNT
              FROM TRAVEL T
              LEFT JOIN USE_POINT U ON (U.TRV_ID = T.TRV_ID)
              WHERE T.STATUS = 'Y'
              AND T.TRV_REF IS NULL
              GROUP BY T.TRV_ID) US ON (US.TRV_ID = T.TRV_ID)
	    WHERE T.STATUS = 'Y'
	    AND T.TRV_REF IS NULL
		AND T.TRV_ID = #{ trvId }
	</select>
	
	<select id="checkBuyStatus" resultType="string">
		SELECT DECODE(COUNT(*), 0, 'N', 1, 'Y') BUY_STATUS
		FROM USE_POINT
		WHERE TRV_ID = #{ trvId }
		AND MEMBER_ID = #{ memberId }
	</select>
	
	<select id="checkLikeyStatus" resultType="string">
		SELECT DECODE(COUNT(*), 0, 'N', 1, 'Y') LIKEY_STATUS
		FROM LIKEY
		WHERE TRV_ID = #{ trvId }
		AND MEMBER_ID = #{ memberId }
	</select>
	
	<update id="travelDelete" parameterType="_int">
		UPDATE TRAVEL
		SET STATUS = 'N'
		WHERE TRV_ID = #{ trvId }
	</update>
	
	<insert id="travelLikeyInsert" parameterType="Likey">
		INSERT INTO LIKEY (LIKEY_ID, MEMBER_ID, ENROLL_DATE, LIKEY_TYPE, TRV_ID)
		VALUES (LIKEY_SEQ.NEXTVAL, #{ memberId }, SYSDATE, '일정', #{ trvId })
	</insert>
	
	<delete id="travelLikeyDelete" parameterType="Likey">
		DELETE FROM LIKEY
		WHERE MEMBER_ID = #{ memberId }
		AND TRV_ID = #{ trvId }
	</delete>
	
	<select id="selectDaySchOne" parameterType="TravelBoard" resultMap="trvDayScheduleResultSet">
		SELECT *
		FROM TRV_DAY TD
		LEFT JOIN TRV_SCH TSCH ON (TD.DAY_ID = TSCH.DAY_ID)
		WHERE TD.TRV_ID = #{ trvId }
		AND TD.DAY_NUMBER = #{ dayNumber }
		AND TSCH.SCH_TRANSP IS NULL
		AND TSCH.SCH_ID != 0
	</select>
	
	<select id="tourReviewList" resultMap="tourReviewResultSet">
		SELECT *
		FROM TOUR_REVIEW TR
		JOIN MEMBER M ON (TR.MEMBER_ID = M.MEMBER_ID)
		WHERE TRV_ID = #{ trvId }
		AND REVIEW_STATUS = 'Y'
	</select>
	
	<select id="CheckWriteStatus" resultType="string">
		SELECT DECODE(COUNT(*), 0, 'N', 1, 'Y') WRITE_STATUS
		FROM TOUR_REVIEW
		WHERE REVIEW_STATUS = 'Y'
		AND TRV_ID = #{ trvId }
		AND MEMBER_ID = #{ memberId }
	</select>
	
	<!-- 일정 구매리뷰 추가 -->
	<insert id="insertReview" parameterType="TourReview">
		INSERT INTO TOUR_REVIEW (REVIEW_ID, REVIEW_DATE, REVIEW_STATUS, GRADE, MEMBER_ID, REVIEW_CONTENT, TRV_ID)
		VALUES(TOUR_REVIEW_SEQ.NEXTVAL, SYSDATE, 'Y', #{ grade }, #{ memberId }, #{ reviewContent }, #{ trvId })
	</insert>
	
	<!-- 일정 구매리뷰 추가 성공 후 해당 구매리뷰 아이디 조회 -->
	<select id="searchReviewId" resultType="_int">
		SELECT REVIEW_ID
		FROM TOUR_REVIEW
		WHERE TRV_ID = #{ trvId }
		AND MEMBER_ID = #{ memberId }
		AND REVIEW_STATUS = 'Y'
	</select>
	
	<!-- 자신이 작성한 여행일정 리뷰 조회 -->
	<select id="myTourReviewSearch" resultMap="tourReviewResultSet">
	    SELECT *
	    FROM TOUR_REVIEW TR
	    JOIN MEMBER M ON (TR.MEMBER_ID = M.MEMBER_ID)
	    WHERE REVIEW_STATUS = 'Y'
	    AND TR.TRV_ID = #{ trvId }
	    AND M.MEMBER_ID = #{ memberId }
	</select>
	
	<!-- 자신이 작성한 여행일정 리뷰 수정 -->
	<update id="myTourReviewUpdate">
		UPDATE TOUR_REVIEW
		SET REVIEW_DATE = SYSDATE, GRADE = #{ grade }, REVIEW_CONTENT = #{ reviewContent }
		WHERE REVIEW_ID = #{ reviewId }
	</update>
	
	<!-- 자신이 작성한 여행일정 리뷰 삭제 -->
	<update id="deliteReview">
		UPDATE TOUR_REVIEW
		SET REVIEW_DATE = SYSDATE, REVIEW_STATUS = 'N'
		WHERE REVIEW_ID = #{ reviewId }
		AND MEMBER_ID = #{ memberId }
	</update>
	
	<!-- 일정의 가계부 조회 -->
	<select id="">
		SELECT DISTINCT TT.TOTAL_COST, RC.ROOM_CHARGE, TC.TRAFFIC_CHARGE, FC.FOOD_CHARGE, SHC.SHOPPING_CHARGE, SIC.SIGHTSEEING_CHARGE, EC.ETC_CHARGE
		FROM TRAVEL T
		LEFT JOIN TRV_DAY TD ON (T.TRV_ID = TD.TRV_ID)
		LEFT JOIN TRV_COST TC ON(TD.DAY_ID = TC.DAY_ID)
		LEFT JOIN TRV_SCH TS ON (TS.SCH_ID = TC.SCH_ID)
		JOIN (SELECT T.TRV_ID, SUM(COST_AMOUNT) AS TOTAL_COST
		            FROM TRAVEL T
		            LEFT JOIN TRV_DAY TD ON (T.TRV_ID = TD.TRV_ID)
		            LEFT JOIN TRV_COST TC ON(TD.DAY_ID = TC.DAY_ID)
		            LEFT JOIN TRV_SCH TS ON (TS.SCH_ID = TC.SCH_ID)
		            GROUP BY T.TRV_ID) TT ON (T.TRV_ID = TT.TRV_ID)
		JOIN (SELECT T.TRV_ID, NVL(SUM(COST_AMOUNT), 0) AS ROOM_CHARGE
		            FROM TRAVEL T
		            LEFT JOIN TRV_DAY TD ON (T.TRV_ID = TD.TRV_ID)
		            LEFT JOIN TRV_COST TC ON(TD.DAY_ID = TC.DAY_ID) AND COST_TYPE = '숙박'
		            LEFT JOIN TRV_SCH TS ON (TS.SCH_ID = TC.SCH_ID)
		            WHERE T.TRV_ID = 1
		            GROUP BY T.TRV_ID) RC ON (T.TRV_ID = RC.TRV_ID)
		JOIN (SELECT T.TRV_ID, NVL(SUM(COST_AMOUNT), 0) AS TRAFFIC_CHARGE
		            FROM TRAVEL T
		            LEFT JOIN TRV_DAY TD ON (T.TRV_ID = TD.TRV_ID)
		            LEFT JOIN TRV_COST TC ON(TD.DAY_ID = TC.DAY_ID) AND COST_TYPE = '교통'
		            LEFT JOIN TRV_SCH TS ON (TS.SCH_ID = TC.SCH_ID)
		            WHERE T.TRV_ID = 1
		            GROUP BY T.TRV_ID) TC ON (T.TRV_ID = RC.TRV_ID)
		JOIN (SELECT T.TRV_ID, NVL(SUM(COST_AMOUNT), 0) AS FOOD_CHARGE
		            FROM TRAVEL T
		            LEFT JOIN TRV_DAY TD ON (T.TRV_ID = TD.TRV_ID)
		            LEFT JOIN TRV_COST TC ON(TD.DAY_ID = TC.DAY_ID) AND COST_TYPE = '식비'
		            LEFT JOIN TRV_SCH TS ON (TS.SCH_ID = TC.SCH_ID)
		            WHERE T.TRV_ID = 1
		            GROUP BY T.TRV_ID) FC ON (T.TRV_ID = RC.TRV_ID)
		JOIN (SELECT T.TRV_ID, NVL(SUM(COST_AMOUNT), 0) AS SHOPPING_CHARGE
		            FROM TRAVEL T
		            LEFT JOIN TRV_DAY TD ON (T.TRV_ID = TD.TRV_ID)
		            LEFT JOIN TRV_COST TC ON(TD.DAY_ID = TC.DAY_ID) AND COST_TYPE = '쇼핑'
		            LEFT JOIN TRV_SCH TS ON (TS.SCH_ID = TC.SCH_ID)
		            WHERE T.TRV_ID = 1
		            GROUP BY T.TRV_ID) SHC ON (T.TRV_ID = RC.TRV_ID)
		JOIN (SELECT T.TRV_ID, NVL(SUM(COST_AMOUNT), 0) AS SIGHTSEEING_CHARGE
		            FROM TRAVEL T
		            LEFT JOIN TRV_DAY TD ON (T.TRV_ID = TD.TRV_ID)
		            LEFT JOIN TRV_COST TC ON(TD.DAY_ID = TC.DAY_ID) AND COST_TYPE = '관광'
		            LEFT JOIN TRV_SCH TS ON (TS.SCH_ID = TC.SCH_ID)
		            WHERE T.TRV_ID = 1
		            GROUP BY T.TRV_ID) SIC ON (T.TRV_ID = RC.TRV_ID) 
		JOIN (SELECT T.TRV_ID, NVL(SUM(COST_AMOUNT), 0) AS ETC_CHARGE
		            FROM TRAVEL T
		            LEFT JOIN TRV_DAY TD ON (T.TRV_ID = TD.TRV_ID)
		            LEFT JOIN TRV_COST TC ON(TD.DAY_ID = TC.DAY_ID) AND COST_TYPE = '기타'
		            LEFT JOIN TRV_SCH TS ON (TS.SCH_ID = TC.SCH_ID)
		            WHERE T.TRV_ID = 1
		            GROUP BY T.TRV_ID) EC ON (T.TRV_ID = RC.TRV_ID)
		WHERE T.TRV_ID = #{ trvId }
	</select>
</mapper>